name: New React App
on:
  push:
    branches:
      - main
  workflow_dispatch: null
  pull_request:
    branches:
      - main
jobs:
  build-and-scan:
    runs-on: ubuntu-latest
    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
    
      - name: Official SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v3.0.0
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=hackathon-proj -Dsonar.host.url=${{ env.SONAR_HOST_URL
            }} -Dsonar.login=${{ env.SONAR_TOKEN }}
            -Dsonar.working.directory=./.scannerwork
      
      - name: Print SonarQube Logs
        run: >
          ls -al .scannerwork
          cat .scannerwork/report-task.txt || echo "report-task.txt not found"

      - name: Build Docker image
        run: |
          docker build -t $DOCKER_IMAGE:${{ github.sha }} .
          docker tag $DOCKER_IMAGE:${{ github.sha }} $DOCKER_IMAGE:latest

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ecr-2
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t ecr-2 .
          docker tag ecr-2:latest 783764619143.dkr.ecr.ap-southeast-2.amazonaws.com/ecr-2:latest
          docker push 783764619143.dkr.ecr.ap-southeast-2.amazonaws.com/ecr-2:latest
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2
          
      - name: Install kubectl
        uses: azure/setup-kubectl@v2.0
        with:
           version: 'v1.24.0' # default is latest stable
        id: install
        
      - name: Update kube config
        run: aws eks update-kubeconfig --region ap-southeast-2 --name hackathon2
      
      - name: Deploy to EKS
        run: |
          kubectl apply -f deployment.yaml
